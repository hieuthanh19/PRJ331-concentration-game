/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bntgroup.concentrationgame;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author ThanhKH
 */
public class Leaderboard extends javax.swing.JFrame {

    private final String player;
    private final String themes;
    private WindowListener wlsnr;

    /**
     * Creates new form Leaderboard
     *
     * @param player
     * @param themes
     * @throws java.io.IOException
     */
    public Leaderboard(String player, String themes) throws IOException {
        this.player = player;
        this.themes = themes;
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/group-logo.png"));
        this.setIconImage(icon);
        setUp();
        preventExit();

    }

    /**
     *
     * Load files from txt file via loadfile function call list from the
     * PlayerManagement class Run around for each array at the end of the table
     *
     * @throws IOException
     */
    public void load() throws IOException {
        try {
            //get player's data
            PlayerManagement pm = new PlayerManagement("src/data/data.txt");
            pm.loadFile();
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            //store row data
            Object rowData[] = new Object[5];
            //model.getDataVector().removeAllElements();
            //model.fireTableDataChanged();
            //TableRowSorter sorter = new TableRowSorter(model);
            //tbl.setRowSorter(sorter);
            int a = pm.getListPlayer().size();
            pm.sort();
            for (int i = 0; i < a; i++) {
                rowData[0] = i + 1;
                rowData[1] = pm.getListPlayer().get(i).getName();
                rowData[2] = pm.getListPlayer().get(i).getPoints();
                rowData[3] = pm.getListPlayer().get(i).getGameMode();
                rowData[4] = pm.getListPlayer().get(i).getTime();
                model.addRow(rowData); 
            }
        } catch (IOException ex) {
            System.out.println("error " + ex);
        }
    }

    //set up initial information
    public final void setUp() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            
        try {
            load();
            //center cell text
            for (int x = 0; x < 5; x++) {
                tbl.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);                
            };
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(Leaderboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        //change header font and center text
        JTableHeader header = tbl.getTableHeader();
        header.setForeground(Color.black);
        header.setFont(new Font("Tahoma", Font.BOLD, 26));
        ((DefaultTableCellRenderer)header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        scrollPane.setOpaque(false);
        scrollPane.getViewport().setOpaque(false);

    }

    /**
     * prevent closing the program (by return to main menu) when press close
     * button
     */
    public final void preventExit() {
        //create new window adapter to catch close action
        this.wlsnr = new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent we) {

                //open main menu
                MainMenu main = new MainMenu(player, themes);
                main.setVisible(true);
                main.pack();
                main.setLocationRelativeTo(null);
            }

        };

        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.addWindowListener(wlsnr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblReturn = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Concentration Game");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(32, 33, 36));
        jPanel1.setToolTipText("");

        lblReturn.setForeground(new java.awt.Color(255, 255, 255));
        lblReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return-icon.png"))); // NOI18N
        lblReturn.setToolTipText("<html> <b>Back</b><br> Click to go back to previous window. </html>");
        lblReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReturnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblReturnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblReturnMouseExited(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("League Spartan", 1, 28)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Leaderboard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblReturn)
                .addGap(280, 280, 280)
                .addComponent(lblTitle)
                .addContainerGap(315, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(13, 102, 72));

        tbl.setBackground(new java.awt.Color(13, 102, 72));
        tbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tbl.setForeground(new java.awt.Color(255, 255, 255));
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rank", "Name", "Points", "Mode", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setAlignmentX(1.0F);
        tbl.setAlignmentY(1.0F);
        tbl.setFocusable(false);
        tbl.setGridColor(new java.awt.Color(13, 102, 72));
        tbl.setRowHeight(40);
        tbl.setRowMargin(5);
        tbl.setSelectionBackground(new java.awt.Color(13, 152, 72));
        tbl.setShowHorizontalLines(false);
        tbl.setShowVerticalLines(false);
        scrollPane.setViewportView(tbl);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReturnMouseClicked
        MainMenu main = new MainMenu(player, themes);
        main.setVisible(true);
        main.pack();
        main.setLocationRelativeTo(null);
        main.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.removeWindowListener(wlsnr);
        this.dispose();
    }//GEN-LAST:event_lblReturnMouseClicked

    private void lblReturnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReturnMouseEntered
        lblReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return-icon-hover.png")));
    }//GEN-LAST:event_lblReturnMouseEntered

    private void lblReturnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReturnMouseExited
        lblReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return-icon.png")));
    }//GEN-LAST:event_lblReturnMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblReturn;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
}
